@model AddProductVM
@{
    Layout = "~/Views/Shared/_Layout-admin.cshtml";
}


<div class="container">


    <div class="content-grid">

        <div class="text-center icon" style="display: inline-flex;padding-left: 20px">
            <a href="/company/companydashboard?companyId=@Model.CompanyId" class="btn btn-success">Back</a>    <h3 style="padding-left: 20px">Add Product</h3>
        </div>
        <div class="content-bottom">
            <form enctype="multipart/form-data" asp-action="AddProduct">
                <div class="field-group">
                    <input asp-for="@Model.CompanyId" type="hidden" value="@Model.CompanyId">
                    <input asp-for="@Model.ProductId" type="hidden" value="@Model.ProductId">

                    <div class="content-input-field" style="display: inline-flex">
                        <label style="min-width: 55%">Category </label>       <select id="Category" class="form-control" style="min-width: 200px" asp-for="@Model.CategoryId" asp-items="@Model.Category"></select>
                    </div>
                </div>
                <br />
                <div class="field-group">

                    <div class="content-input-field" style="display: inline-flex">
                        <label style="min-width: 50%">Sub Category </label>       <select id="SubCategory" class="form-control" style="min-width: 200px" asp-for="@Model.SubCategoryId" asp-items="@Model.SubCategory"></select>
                    </div>
                </div>
                <br />
               
                <div class="field-group">

                    <div class="content-input-field">
                        <input asp-for="@Model.ProductCode" type="text"  placeholder="Product Code" required="">
                    </div>
                </div>

                <div class="field-group">
                    <div class="content-input-field">
                        <input asp-for="@Model.ProductName" type="text" placeholder="Product Name">
                    </div>
                </div>

                <div class="field-group">
                    <div class="content-input-field">
                        <input asp-for="@Model.Discount" type="text" placeholder="Discount">
                    </div>
                </div>
                <div class="field-group">
                    <div class="content-input-field">
                        <input asp-for="@Model.Price" type="number" placeholder="Price">
                    </div>
                </div>
                <div class="field-group">
                    <div class="content-input-field">
                        <input asp-for="@Model.Description" type="text" placeholder="Description">
                    </div>
                </div>
                <div class="field-group" style="display: inline-flex">

                    <div class="custom-file">  
                        <input asp-for="@Model.ImagePath" class="custom-file-input" id="customFile" style="display: none" >  
                        <label class="btn btn-success" for="customFile">Select Image</label>  
                        <img id="proImg" src="@(Model.UploadPath??"/images/noimage.png")" style="height: 70px;width: 70px" />
                    </div>  
                    
                </div>
                <div style="color:red" asp-validation-summary="All"></div>

                <div class="content-input-field">
                    <button type="submit" class="btn">Add</button>
                </div>
            </form>
        </div>
    </div>

    <h3>List of Products</h3>

    <table id="dataTable" class="table table-striped table-bordered">
        <thead>
        <tr>
            <td>Update</td>
            <td>Delete</td>
            <td>Image</td>
            <td>Name</td>
            <td>Code</td>
            <td>Discount</td>
            <td>Price</td>
            <td>Description</td>
        </tr>
        </thead>
    </table>
</div>





@section scripts{


    <script type="text/javascript">
        function readIMG(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#proImg').attr('src', e.target.result);
                }

                reader.readAsDataURL(input.files[0]);
            }
        }


        $("#customFile").change(function(){
            readIMG(this);
        });
        $("#Category").change(function () {
            var id = $(this).val();
            var subCategory = $("#SubCategory");
            subCategory.empty().append('<option selected="selected" value="0" disabled = "disabled">Loading.....</option>');
            $.ajax({
                type: "POST",
                url: "/Category/GetSubCategory?categoryId=" + id,
                data: '{}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    subCategory.empty();
                    $.each(response, function () {
                        subCategory.append($("<option></option>").val(this['id']).html(this['name']));
                    });
                },
                failure: function (response) {
                    alert(response.responseText);
                },
                error: function (response) {
                    alert(response.responseText);
                }
            });
        });

        var filterValues = {};
        $(document).ready(function () {
            $("#Category").change();
            var refDataTable = $("#dataTable").dataTable({
                serverSide: true,
                bFilter: false,
                columns: [
                    {
                        "render": function (data, type, JsonResultRow, meta) {
                            return '<a href="/company/Products?companyId=@Model.CompanyId&productId=' + JsonResultRow.productId+'" >Update</a>';
                        }
                    },
                    {
                        "render": function (data, type, JsonResultRow, meta) {
                            return '<a href="/company/DeleteProduct?CompanyId=@Model.CompanyId&ProductId=' + JsonResultRow.productId+'" >Delete</a>';
                        }
                    },
                    {
                        "render": function (data, type, JsonResultRow, meta) {
                            return '<img src="' + JsonResultRow.uploadPath+'" class="rounded-circle" height="40" width="40" >';
                        }
                    },
                    { data: "productName" },
                    { data: "productCode" },
                    { data: "discount" },
                    { data: "price" },
                    { data: "description" }

                ],
                ajax: function (data, callback, settings) {
                    filterValues.draw = data.draw;
                    filterValues.start = data.start;
                    filterValues.length = data.length;
                    filterValues.companyId=@Model.CompanyId;
                    $.ajax({
                        url: '/GetCompanyData/GetProducts',
                        method: 'GET',
                        data: filterValues
                    }).done(callback);
                }
            });
        });
    </script>
}

